plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.6'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "org.asciidoctor.jvm.convert" version "3.3.2" //Spring Rest Docs API; Asciidoctor 플러그인 사용
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

//Spring Rest Docs API
ext {
	set('snippetsDir', file("build/generated-snippets"))
}

//Spring Rest Docs API
configurations {
	asciidoctorExtensions
}

dependencies {
	// Spring Boot 기본값 (Spring Web)
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Spring Data Jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// MySQL
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Test용 H2
	runtimeOnly 'com.h2database:h2'

	// jasypt: 특정 값을 암호화해주는 라이브러리
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

	// bcprov: 자바 암호화 라이브러리
	implementation 'org.bouncycastle:bcprov-jdk15on:1.70'

	// Validation: 유효성 검사 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//GSON
	implementation 'com.google.code.gson:gson'

	//`spring-restdocs-core`와 `spring-restdocs-mockmvc` 라이브러리
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	//`spring-restdocs-asciidoctor` 라이브러리
	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

tasks.named('test') {
	//Spring Rest Docs API
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	configurations "asciidoctorExtensions"
	inputs.dir snippetsDir
	dependsOn test
}

//Spring Rest Docs API
task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file("${asciidoctor.outputDir}")
	into file("src/main/resources/static/docs")
}

//Spring Rest Docs API
build {
	dependsOn copyDocument
}

//Spring Rest Docs API
bootJar {
	dependsOn copyDocument
	from("${asciidoctor.outputDir}") {
		into 'static/docs'
	}
}